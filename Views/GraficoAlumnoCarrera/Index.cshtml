<div>
    <canvas id="myChart"></canvas>
</div>
<div>
    <canvas id="myChart2"></canvas>
</div>
<div>
    <canvas id="miGraficoDeTorta"  width="600" height="600"></canvas>
</div>






<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('myChart');

    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
            datasets: [{
                label: 'Carreras',
                data: [],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>

@section Scripts {
    <script src="~/js/Alumno.js"></script>

    <script>

        $.ajax({
            url: '../../Alumnos/BuscarAlumnos',
            type: 'GET',
            dataType: 'json',
            success: function (alumnos) {
                // Crear un objeto para contar la cantidad de alumnos por carrera
                var carrerasAlumnos = {};

                // Iterar a través de la lista de alumnos y contar los alumnos por carrera
                $.each(alumnos, function (Index, alumno) {
                    var nombreCarrera = alumno.nombreCarrera;
                    if (carrerasAlumnos[nombreCarrera]) {
                        carrerasAlumnos[nombreCarrera]++;
                    } else {
                        carrerasAlumnos[nombreCarrera] = 1;
                    }
                });


                var nombresCarreras = Object.keys(carrerasAlumnos);
                var cantidadAlumnos = Object.values(carrerasAlumnos);

                // Crear el gráfico una vez que se han recopilado los datos
                const ctx = document.getElementById('myChart');

                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: nombresCarreras,
                        datasets: [{
                            label: 'Cantidad de Alumnos',
                            data: cantidadAlumnos, // Usar la cantidad de alumnos
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            },
            error: function () {
                console.log('Error al obtener los datos de los alumnos.');
            }
        });
    </script>

    <script>
        // Función para calcular la edad a partir de una fecha de nacimiento
        function calcularEdad(fecha) {
            var hoy = new Date();
            var cumpleanos = new Date(fecha);
            var edad = hoy.getFullYear() - cumpleanos.getFullYear();
            var m = hoy.getMonth() - cumpleanos.getMonth();

            if (m < 0 || (m === 0 && hoy.getDate() < cumpleanos.getDate())) {
                edad--;
            }

            return edad;
        }


        $.ajax({
            url: '../../Alumnos/BuscarAlumnos',
            type: 'GET',
            dataType: 'json',
            success: function (alumnos) {
                // Crear un objeto para contar la cantidad de alumnos por carrera y almacenar edades
                var alumnosData = {};


                $.each(alumnos, function (Index, alumno) {
                    var nombreCarrera = alumno.nombreCarrera;
                    var edad = calcularEdad(alumno.nacimientoAlumno);

                    if (!alumnosData[nombreCarrera]) {
                        alumnosData[nombreCarrera] = {
                            edades: [],
                            cantidad: 0
                        };
                    }

                    alumnosData[nombreCarrera].edades.push(edad);
                    alumnosData[nombreCarrera].cantidad++;
                });

                // Crear el gráfico una vez que se han recopilado los datos
                const ctx = document.getElementById('myChart2');

                // Preparar los datos para el gráfico
                var data = {
                    labels: [],
                    datasets: [{
                        label: 'Edad Promedio de Alumnos',
                        data: [],
                        borderWidth: 1
                    }]
                };

                for (var carrera in alumnosData) {
                    if (alumnosData.hasOwnProperty(carrera)) {
                        data.labels.push(carrera);
                        var edades = alumnosData[carrera].edades;
                        var sumaEdades = edades.reduce((a, b) => a + b, 0);
                        var promedio = sumaEdades / edades.length;
                        data.datasets[0].data.push(promedio);
                    }
                }

                new Chart(ctx, {
                    type: 'bar',
                    data: data,
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            },
            error: function () {
                console.log('Error al obtener los datos de los alumnos.');
            }
        });
    </script>

    @* GRAFICO DE TORTA *@

    <script>
       
        $.ajax({
            url: '../../GraficoAlumnoCarrera/BuscarAlumnosGrafico', 
            type: 'GET', 
            dataType: 'json', 
            success: function (resultado) {
                // Función que se ejecuta si la solicitud es exitosa y devuelve datos

                // Obtiene el contexto del lienzo del elemento canvas
                const ctx = document.getElementById('miGraficoDeTorta').getContext('2d');

                // Etiquetas para los rangos de edades
                var labels = [
                    "Menor de 18",
                    "18 a 24",
                    "25 a 34",
                    "35 a 44",
                    "45 a 54",
                    "55 a 64",
                    "Mayor de 65",
                ];

                // gráfico de rosquilla 
                new Chart(ctx, {
                    type: 'doughnut', // Tipo de gráfico de rosquilla
                    data: {
                        labels: labels, // Etiquetas para los segmentos del gráfico
                        datasets: [{
                            data: resultado.data, // Datos de los alumnos por rango de edad
                            backgroundColor: [ 
                                'rgba(75, 192, 192, 1)',  
                                'rgba(54, 162, 235, 1)',   
                                'rgba(153, 102, 255, 1)',  
                                'rgba(255, 99, 132, 1)',   
                                'rgba(255, 159, 64, 1)',   
                                'rgba(255, 205, 86, 1)',  
                                'rgba(75, 192, 192, 1)'
                            ],
                            borderColor: [ 
                                'rgb(75, 192, 192)',
                                'rgb(54, 162, 235)',
                                'rgb(153, 102, 255)',
                                'rgb(255, 99, 132)',
                                'rgb(255, 159, 64)',
                                'rgb(255, 205, 86)',
                                'rgb(75, 192, 192)'
                            ],
                            borderWidth: 1 
                        }]
                    },
                    options: {
                        plugins: {
                            legend: {
                                display: true,
                                position: 'right' 
                            },
                            title: {
                                display: true,
                                text: 'Distribución de Alumnos por Rango de Edad', // Título del gráfico
                                font: {
                                    color: Chart.defaults.color = '#black' // Color del texto del título
                                },
                                padding: {
                                    top: 10, 
                                    bottom: 30 
                                }
                            }
                        },
                         responsive: true, 
                         maintainAspectRatio: false, 
                        animation: {
                            duration: 2000,
                            easing: 'easeOutBounce' //  animación
                        }
                    }
                });
            },
            error: function () {

                console.log('Error al obtener los datos de los alumnos.');
            }
        });
    </script>

}